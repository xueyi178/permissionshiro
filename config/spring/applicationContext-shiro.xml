<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	<!-- web.xml中shiro的filter对应的bean -->
	<!-- Shiro 的Web过滤器 -->
	<bean id="shiroFilter"
		class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<!-- loginUrl:认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
		<property name="loginUrl" value="/login.action" />
		
		<!-- 认证成功统一跳转到first.action,建议不配置,shrio认证成功自动跳转到上一个请求的路径  -->
		<!-- <property name="successUrl" value="/first.action"/> -->
		
		<!-- 通过 unauthorizedUrl：指导没有权限操作时跳转页面 ,value：就是一个url -->
		<property name="unauthorizedUrl" value="/refuse.jsp" />
		<!-- 将自定义的MyFormAuthenticationFilter注入到shiroFilter中 -->
		<property name="filters">
			<map>
				<entry key="authc" value-ref="formAuthenticationFilter"></entry>
			</map>
		</property>
		<!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边 -->
		<property name="filterChainDefinitions">
			<value>
			<!-- 对所有的静态资源设置匿名都可以访问   -->
				/images/** = anon
				/js/** = anon
				/styles/** = anon
				
				<!-- 验证码可匿名访问  -->
				/validatecode.jsp= anon
				
				<!-- 注意就是把/**都放到下面来进行配置   -->
				<!-- 请求/logout.action这个地址的就自动进行退出,清楚session -->
				/logout.action = logout
				
				<!-- 商品的查询需要商品查询的权限,取消url拦截的配置器,使用注解来进行授权
				/items/queryItems.action = perms[item:query]  -->
				
				<!-- /** = authc：所有的url必须都认证通过才能访问    -->
				/** = authc
				
				<!-- 配置记住我或认证通过可以访问的地址   -->
				/idnex.jsp = user
				/first.action = user
				/welcome.jsp = user
			</value>
		</property>
	</bean>

	<!-- securityManager安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="userRealm" />
		<!-- 注入缓存管理器  -->
		<property name="cacheManager" ref="cacheManager"/>
		<!-- 注入session管理器  -->
		<property name="sessionManager" ref="sessionManager"/>
		<!-- 注入rememberMeManager管理器  -->
		<property name="rememberMeManager" ref="rememberMeManager"/>
	</bean>

	<!-- 自定义 realm -->
	<bean id="userRealm" class="cn.itcast.ssm.realm.CustomRealm">
		<!-- 将认证凭证器设置到realm中,realm中按照凭证匹配器的要求进行散列  -->
		<property name="credentialsMatcher" ref="credentialsMatcher" />
	</bean>
	
	<!-- 设置凭证匹配器  -->
	<bean id="credentialsMatcher"
		class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="md5" />
		<property name="hashIterations" value="1" />
	</bean>
	
	<!-- 缓存管理器 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
    	<property name="cacheManagerConfigFile" value="classpath:shiro-ehcache.xml"></property>
    </bean>
    
    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- session的失效时长，单位毫秒 -->
        <property name="globalSessionTimeout" value="600000"/>
        <!-- 删除失效的session -->
        <property name="deleteInvalidSessions" value="true"/>
    </bean>
    
    <!-- 自定义form认证过滤器   -->
    <!-- 基于Form表单的身份验证的过滤器,不配置将也会注册此过滤器,表单中的用户账号、密码及loginurl将采用默认值,建议配置 -->
    <bean id="formAuthenticationFilter" class="cn.itcast.ssm.realm.MyFormAuthenticationFilter">
    	<!-- 表单中的账号的input名称 -->
    	<property name="usernameParam" value="username"></property>
    	<!-- 表单中的密码的input名称 -->
    	<property name="passwordParam" value="password"></property>
    	<!-- 记住我input的名称   -->
		<property name="rememberMeParam" value="rememberMe"/>
    </bean>
    
    <!-- rememberMeManager管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
	<!-- 记住我cookie -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<!-- 记住我cookie生效时间30天 -->
		<property name="maxAge" value="2592000" />
	</bean>
</beans>